Priority tasks:

In chat_handler.py, fix the issue with cached pages not being updated when a new message is added to the chat.

The project should function seamlessly in the following scenario:
- User forks the project on GitHub
- User clones their fork of the project locally and runs it
- Messages repository is stored in a uniquely named directory in user's fork (based on fork location)
- The root project is updated with list of forks that clients should pull messages from
- Perhaps the messages are stored in a separate branch?
- Please fill in with missing details

Future tasks to keep in mind:

Write detailed installation instructions for the project.
- Windows, using WSL
- Mac
- GNU/Linux

Make an installer script that takes care of everything.
- Install dependencies
- Add 'g' command to user's shell as an alias, detect shell type first

Make the send button immediately add the message to the chat history in the current page. (done)
- The message should be sent to the server in the background (done)

Add a button which triggers synchronizing with all the remote repositories. (done)
- This should be a manual action, not automatic. (done)
- Remove the automatic synchronization code. (done)

Fix the problem with the Sync button, repro steps:
- Add a new message in a remote git repo
- Press the Sync button. Error is displayed: Error syncing messages: Sync failed
- Press the Sync button again. It works this time.

Suggest ways to implement live updates using GitHub Actions or other methods.

Figure out a testing strategy for the codebase and implement it.
- Suggest ways to implement unit tests, integration tests, and end-to-end tests.

Add real-time updates using WebSocket

Add message statistics and analytics page

Write a sweeper/linter script that ensures all files have marker comments
- For Python files, also ensure indentation is correct and consistent

–êdd call to setup_default_channels() somewhere appropriately

If the server does not respond, the message should be queued in localstorage
- The message should be sent when the server is back online

